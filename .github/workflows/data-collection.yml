# .github/workflows/data-collection.yml
name: MTA and Weather Data Collection

on:
  workflow_dispatch:
    inputs:
      job_type:
        description: 'Which job to run'
        required: true
        default: 'both'
        type: choice
        options:
        - mta
        - weather
        - both

jobs:
  collect-mta-data:
    runs-on: ubuntu-latest
    if: ${{ !github.event.inputs.job_type || github.event.inputs.job_type == 'mta' || github.event.inputs.job_type == 'both' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests sqlalchemy psycopg2-binary nyct-gtfs
      
      - name: Create data_files directory
        run: mkdir -p data_files
      
      - name: Run MTA data collection
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: |
          echo "Starting MTA data collection at $(date -u) UTC"
          python collect_real_time_mta_info.py
          echo "Finished MTA data collection at $(date -u) UTC"

  collect-weather-data:
    runs-on: ubuntu-latest
    if: ${{ !github.event.inputs.job_type || github.event.inputs.job_type == 'weather' || github.event.inputs.job_type == 'both' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests sqlalchemy psycopg2-binary
      
      - name: Run weather data collection
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: |
          echo "Starting weather data collection at $(date -u) UTC"
          python collect_weather_info.py
          echo "Finished weather data collection at $(date -u) UTC"
